# Based on GTSAM file (by @ProfFan)
name: CI Windows

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.name }} ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}

    env:
      CTEST_OUTPUT_ON_FAILURE: ON
      CTEST_PARALLEL_LEVEL: 1
      CMAKE_BUILD_TYPE: ${{ matrix.build_type }}
      VERBOSE: 1  # to show all cmake scripts debug info

    strategy:
      fail-fast: false
      matrix:
        # Github Actions requires a single row to be added to the build matrix.
        # See https://help.github.com/en/articles/workflow-syntax-for-github-actions.
        name: [
            windows-2019,
          ]

        build_type: [
            Release
          ]
        include:
          - name: windows-2019
            os: windows-2019
            compiler: cl
            platform: 64

    steps:
      - name: Print env
        run: |
          echo github.event.action: ${{ github.event.action }}
          echo github.event_name: ${{ github.event_name }}

      - name: Install OpenCV
        run: |
          choco install --verbose opencv

      - name: Install WxWidgets
        run: |
          choco install --verbose wxwidgets

      - name: Install Qt5
        run: |
          choco install --verbose qt5-default
          
      # (Jul 2022: Disabled since find_package(Doxygen) in Octomap leads to 
      #  internal Doxygen.exe errors leading to CI failure)
      #- name: Install doxygen+graphviz
      #  run: |
      #    choco install --verbose doxygen 
      #    choco install --verbose graphviz

      - name: Checkout
        uses: actions/checkout@v2

      - name: Git submodule
        run: |
          git submodule sync
          git submodule update --init --recursive

      - name: CMake configure
        shell: bash
        run: |
          cmake -DMRPT_BUILD_TESTING=On \
                -DMRPT_ALLOW_LGPLV3=ON \
                -DDISABLE_ASSIMP=On \
                -S . \
                -B .

      - name: Build
        shell: bash
        run: |
          cmake --build . -j 4 --config ${{ matrix.build_type }} --target all_mrpt_libs
          cmake --build . -j 4 --config ${{ matrix.build_type }} --target tests_build_all
          cmake --build . -j 4 --config ${{ matrix.build_type }} --target test_legacy
