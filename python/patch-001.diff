--- generated-sources-pybind/std/stl_multimap.cpp	2023-05-01 00:32:51.493774601 +0200
+++ generated-sources-pybind/std/stl_multimap-new.cpp	2023-05-01 00:33:31.256796293 +0200
@@ -45,5 +45,9 @@
 		cl.def("key_comp", (struct std::less<struct std::chrono::time_point<class mrpt::Clock, struct std::chrono::duration<long, struct std::ratio<1, 10000000> > > > (std::multimap<std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000> > >,std::shared_ptr<mrpt::serialization::CSerializable>>::*)() const) &std::multimap<std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>, std::shared_ptr<mrpt::serialization::CSerializable>, std::less<std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>>, std::allocator<std::pair<const std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>, std::shared_ptr<mrpt::serialization::CSerializable>>>>::key_comp, "C++: std::multimap<std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>, std::shared_ptr<mrpt::serialization::CSerializable>, std::less<std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>>, std::allocator<std::pair<const std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>, std::shared_ptr<mrpt::serialization::CSerializable>>>>::key_comp() const --> struct std::less<struct std::chrono::time_point<class mrpt::Clock, struct std::chrono::duration<long, struct std::ratio<1, 10000000> > > >");
 		cl.def("count", (unsigned long (std::multimap<std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000> > >,std::shared_ptr<mrpt::serialization::CSerializable>>::*)(const struct std::chrono::time_point<class mrpt::Clock, struct std::chrono::duration<long, struct std::ratio<1, 10000000> > > &) const) &std::multimap<std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>, std::shared_ptr<mrpt::serialization::CSerializable>, std::less<std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>>, std::allocator<std::pair<const std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>, std::shared_ptr<mrpt::serialization::CSerializable>>>>::count, "C++: std::multimap<std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>, std::shared_ptr<mrpt::serialization::CSerializable>, std::less<std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>>, std::allocator<std::pair<const std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>, std::shared_ptr<mrpt::serialization::CSerializable>>>>::count(const struct std::chrono::time_point<class mrpt::Clock, struct std::chrono::duration<long, struct std::ratio<1, 10000000> > > &) const --> unsigned long", pybind11::arg("__x"));
 		cl.def("equal_range", (struct std::pair<struct std::_Rb_tree_iterator<struct std::pair<const struct std::chrono::time_point<class mrpt::Clock, struct std::chrono::duration<long, struct std::ratio<1, 10000000> > >, class std::shared_ptr<class mrpt::serialization::CSerializable> > >, struct std::_Rb_tree_iterator<struct std::pair<const struct std::chrono::time_point<class mrpt::Clock, struct std::chrono::duration<long, struct std::ratio<1, 10000000> > >, class std::shared_ptr<class mrpt::serialization::CSerializable> > > > (std::multimap<std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000> > >,std::shared_ptr<mrpt::serialization::CSerializable>>::*)(const struct std::chrono::time_point<class mrpt::Clock, struct std::chrono::duration<long, struct std::ratio<1, 10000000> > > &)) &std::multimap<std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>, std::shared_ptr<mrpt::serialization::CSerializable>, std::less<std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>>, std::allocator<std::pair<const std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>, std::shared_ptr<mrpt::serialization::CSerializable>>>>::equal_range, "C++: std::multimap<std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>, std::shared_ptr<mrpt::serialization::CSerializable>, std::less<std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>>, std::allocator<std::pair<const std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000>>>, std::shared_ptr<mrpt::serialization::CSerializable>>>>::equal_range(const struct std::chrono::time_point<class mrpt::Clock, struct std::chrono::duration<long, struct std::ratio<1, 10000000> > > &) --> struct std::pair<struct std::_Rb_tree_iterator<struct std::pair<const struct std::chrono::time_point<class mrpt::Clock, struct std::chrono::duration<long, struct std::ratio<1, 10000000> > >, class std::shared_ptr<class mrpt::serialization::CSerializable> > >, struct std::_Rb_tree_iterator<struct std::pair<const struct std::chrono::time_point<class mrpt::Clock, struct std::chrono::duration<long, struct std::ratio<1, 10000000> > >, class std::shared_ptr<class mrpt::serialization::CSerializable> > > >", pybind11::arg("__x"));
+		
+		cl.def("__iter__", [](std::multimap<std::chrono::time_point<mrpt::Clock, std::chrono::duration<long, std::ratio<1, 10000000> > >,std::shared_ptr<mrpt::serialization::CSerializable>> &mmap) {
+			return pybind11::make_iterator(mmap.begin(), mmap.end());
+			}, pybind11::keep_alive<0, 1>());
 	}
 }
