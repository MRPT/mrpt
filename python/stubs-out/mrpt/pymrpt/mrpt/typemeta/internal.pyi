from typing import Any

from typing import overload

class bimap_mrpt_bayes_CParticleFilter_TParticleFilterAlgorithm_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_bayes_CParticleFilter_TParticleFilterAlgorithm_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_bayes_CParticleFilter_TParticleFilterAlgorithm_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_bayes_CParticleFilter_TParticleResamplingAlgorithm_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_bayes_CParticleFilter_TParticleResamplingAlgorithm_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_bayes_CParticleFilter_TParticleResamplingAlgorithm_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_bayes_TKFMethod_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self, arg0: bimap_mrpt_bayes_TKFMethod_std_string_t) -> None: ...
    @overload
    def __init__(self) -> None: ...
    def assign(self) -> bimap_mrpt_bayes_TKFMethod_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_hwdrivers_CGPSInterface_PARSERS_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_hwdrivers_CGPSInterface_PARSERS_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_hwdrivers_CGPSInterface_PARSERS_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_hwdrivers_CGenericSensor_TSensorState_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_hwdrivers_CGenericSensor_TSensorState_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_hwdrivers_CGenericSensor_TSensorState_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_hwdrivers_CKinect_TVideoChannel_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_hwdrivers_CKinect_TVideoChannel_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_hwdrivers_CKinect_TVideoChannel_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_hwdrivers_CVelodyneScanner_model_t_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_hwdrivers_CVelodyneScanner_model_t_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_hwdrivers_CVelodyneScanner_model_t_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_hwdrivers_CVelodyneScanner_return_type_t_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_hwdrivers_CVelodyneScanner_return_type_t_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_hwdrivers_CVelodyneScanner_return_type_t_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_hwdrivers_TCameraType_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_hwdrivers_TCameraType_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_hwdrivers_TCameraType_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_img_DistortionModel_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_img_DistortionModel_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_img_DistortionModel_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_img_TColormap_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_img_TColormap_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_img_TColormap_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_maps_CColouredPointsMap_TColouringMethod_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_maps_CColouredPointsMap_TColouringMethod_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_maps_CColouredPointsMap_TColouringMethod_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_maps_CHeightGridMap2D_TMapRepresentation_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_maps_CHeightGridMap2D_TMapRepresentation_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_maps_CHeightGridMap2D_TMapRepresentation_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_maps_COccupancyGridMap2D_TLikelihoodMethod_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_maps_COccupancyGridMap2D_TLikelihoodMethod_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_maps_COccupancyGridMap2D_TLikelihoodMethod_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_maps_COccupancyGridMap3D_TLikelihoodMethod_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_maps_COccupancyGridMap3D_TLikelihoodMethod_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_maps_COccupancyGridMap3D_TLikelihoodMethod_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_maps_CRandomFieldGridMap2D_TMapRepresentation_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_maps_CRandomFieldGridMap2D_TMapRepresentation_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_maps_CRandomFieldGridMap2D_TMapRepresentation_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_nav_CAbstractNavigator_TState_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_nav_CAbstractNavigator_TState_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_nav_CAbstractNavigator_TState_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_nav_CHolonomicND_TSituations_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_nav_CHolonomicND_TSituations_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_nav_CHolonomicND_TSituations_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_obs_CActionRobotMovement2D_TDrawSampleMotionModel_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_obs_CActionRobotMovement2D_TDrawSampleMotionModel_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_obs_CActionRobotMovement2D_TDrawSampleMotionModel_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_obs_CActionRobotMovement2D_TEstimationMethod_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_obs_CActionRobotMovement2D_TEstimationMethod_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_obs_CActionRobotMovement2D_TEstimationMethod_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_obs_CActionRobotMovement3D_TDrawSampleMotionModel_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_obs_CActionRobotMovement3D_TDrawSampleMotionModel_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_obs_CActionRobotMovement3D_TDrawSampleMotionModel_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_obs_CObservation3DRangeScan_TIntensityChannelID_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_obs_CObservation3DRangeScan_TIntensityChannelID_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_obs_CObservation3DRangeScan_TIntensityChannelID_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_opengl_TCullFace_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_opengl_TCullFace_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_opengl_TCullFace_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_poses_TInterpolatorMethod_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_poses_TInterpolatorMethod_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_poses_TInterpolatorMethod_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_slam_CGridMapAligner_TAlignerMethod_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_slam_CGridMapAligner_TAlignerMethod_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_slam_CGridMapAligner_TAlignerMethod_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_slam_TDataAssociationMethod_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_slam_TDataAssociationMethod_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_slam_TDataAssociationMethod_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_slam_TDataAssociationMetric_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_slam_TDataAssociationMetric_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_slam_TDataAssociationMetric_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_slam_TICPAlgorithm_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_slam_TICPAlgorithm_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_slam_TICPAlgorithm_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_slam_TICPCovarianceMethod_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_slam_TICPCovarianceMethod_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_slam_TICPCovarianceMethod_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_slam_similarity_method_t_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_slam_similarity_method_t_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_slam_similarity_method_t_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_system_VerbosityLevel_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self, arg0: bimap_mrpt_system_VerbosityLevel_std_string_t) -> None: ...
    @overload
    def __init__(self) -> None: ...
    def assign(self) -> bimap_mrpt_system_VerbosityLevel_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_vision_TDescriptorType_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_vision_TDescriptorType_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_vision_TDescriptorType_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class bimap_mrpt_vision_TKeyPointMethod_std_string_t:
    m_k2v: Any
    m_v2k: Any
    @overload
    def __init__(self) -> None: ...
    @overload
    def __init__(self, arg0: bimap_mrpt_vision_TKeyPointMethod_std_string_t) -> None: ...
    def assign(self) -> bimap_mrpt_vision_TKeyPointMethod_std_string_t: ...
    @overload
    def direct(self, k, out_v: str) -> bool: ...
    @overload
    def direct(constenummrpt, std) -> bool: ...
    @overload
    def insert(self, k, v: str) -> None: ...
    @overload
    def insert(constenummrpt, conststd) -> void: ...
    @overload
    def inverse(self, v: str, out_k) -> bool: ...
    @overload
    def inverse(conststd, enummrpt) -> bool: ...

class make_sequence_0_t:
    def __init__(self) -> None: ...
