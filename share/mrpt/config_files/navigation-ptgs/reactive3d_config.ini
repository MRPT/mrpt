# ------------------------------------------------------------------------------------------
# Example configuration file for MRPT 2.5 Reactive Navigation engine.
# See C++ documentation: http://reference.mrpt.org/devel/classmrpt_1_1nav_1_1_c_reactive_navigation_system3_d.html
# This .ini file is missing information about the equipped sensors and the Short-Term memory
# For more detailed information, please see the App "ReactiveNav3D-Demo" within MRPT
# ------------------------------------------------------------------------------------------

[ROBOT_CONFIG]
Name = MyRobot	#Optional

#Indicate the geometry of the robot as a set of prisms.
#Format - (LEVELX_HEIGHT, LEVELX_VECTORX, LEVELX_VECTORY)

#Number of height levels used to model the robot
HEIGHT_LEVELS = 2

#Geometrical description of each level
LEVEL1_HEIGHT = 0.6
LEVEL1_VECTORX = 0.3 0.3 -0.3 -0.3
LEVEL1_VECTORY = -0.3 0.3 0.3 -0.3

LEVEL2_HEIGHT = 0.4
LEVEL2_VECTORX = 0.05 0.05 -0.05 -0.05
LEVEL2_VECTORY = -0.1 0.1 0.1 -0.1


# ----------------------------------------------------
#	Parameters for navigation
# ----------------------------------------------------
[ReactiveParams]
# 0 or `hmVIRTUAL_FORCE_FIELDS`: Virtual Force Field
# 1 or `hmSEARCH_FOR_BEST_GAP`: Nearness Diagram (ND)
HOLONOMIC_METHOD = hmSEARCH_FOR_BEST_GAP

weights = 0.5 0.05 0.5 2.0 0.2 0.1
# 1: Free space
# 2: Dist. in sectors			
# 3: Heading toward target
# 4: Closer to target (euclidean)
# 5: Hysteresis
# 6: Security Distance

DIST_TO_TARGET_FOR_SENDING_EVENT = 0.5	# Minimum. distance to target for sending the end event. Set to 0 to send it just on navigation end

robotMax_V_mps = 0.70		# Speed limits - m/s
robotMax_W_degps = 60		# deg/s
ROBOTMODEL_DELAY = 0	# un-used param, must be present for compat. with old mrpt versions 
ROBOTMODEL_TAU = 0		# un-used param, must be present for compat. with old mrpt versions
MAX_REFERENCE_DISTANCE = 2	# Marks the maximum distance regarded by the reactive navigator (m)
SPEEDFILTER_TAU = 0.1	# The 'TAU' time constant of a 1st order lowpass filter for speed commands (s)  

# In normalized distances (distance / maxReference), the start and end of a 
# ramp function that scales the velocity output from the holonomic navigator:
#  velocity scale
#      ^
#      |           _____________
#      |          /
#    1 |         /
#      |        /
#    0 +-------+---|----------------> normalized distance
#           Start
#                 End
secureDistanceStart=0.05	# [0,1] smallest collision-free norm'd dist for which the robot will not move [default: 0.05]
secureDistanceEnd  =0.20	# [0,1] minimum norm'd clearance in current direction for speed to remain same [default:0.20]

USE_DELAYS_MODEL    = false 

# PTGs: See classes derived from mrpt::nav::CParameterizedTrajectoryGenerator ( http://reference.mrpt.org/devel/classmrpt_1_1nav_1_1_c_parameterized_trajectory_generator.html)
# refer to papers for details.
#------------------------------------------------------------------------------
PTG_COUNT      = 3

# C-PTG (circular arcs), driving forward (K=+1)
PTG1_Type      = CPTG_DiffDrive_C
PTG1_resolution = 0.02      # Look-up-table cell size or resolution (in meters)
PTG1_refDistance= 10.0      # Max distance to account for obstacles 
PTG1_num_paths = 121
PTG1_v_max_mps = 1.0
PTG1_w_max_dps = 60
PTG1_K         = 1.0
PTG1_score_priority = 1.0

# alpha-a PTG
PTG2_Type        = CPTG_DiffDrive_alpha
PTG2_resolution = 0.02      # Look-up-table cell size or resolution (in meters)
PTG2_refDistance= 10.0      # Max distance to account for obstacles 
PTG2_num_paths   = 121
PTG2_v_max_mps   = 1.0
PTG2_w_max_dps   = 60
PTG2_cte_a0v_deg = 57
PTG2_cte_a0w_deg = 57
PTG2_score_priority = 1.0

# C-PTG (circular arcs), backwards (K=-1)
# lower priority since we prefer driving forward
PTG3_Type      = CPTG_DiffDrive_C
PTG3_resolution = 0.02      # Look-up-table cell size or resolution (in meters)
PTG3_refDistance= 10.0      # Max distance to account for obstacles 
PTG3_num_paths = 121
PTG3_v_max_mps = 1.0
PTG3_w_max_dps = 60
PTG3_K         = -1.0
PTG3_score_priority = 1.0

#	Parameters for the "Nearness diagram" Holonomic method
# --------------------------------------------------------
[ND_CONFIG]
factorWeights = 1.0 2.0 0.5 1.0
# 1: Free space
# 2: Dist. in sectors
# 3: Closer to target (euclidean)
# 4: Hysteresis
WIDE_GAP_SIZE_PERCENT            = 0.25
MAX_SECTOR_DIST_FOR_D2_PERCENT   = 0.25
RISK_EVALUATION_SECTORS_PERCENT  = 0.25
RISK_EVALUATION_DISTANCE         = 0.7  # In normalized ps-meters [0,1]
TARGET_SLOW_APPROACHING_DISTANCE = 0.8	# For stop gradually
TOO_CLOSE_OBSTACLE               = 0.03 # In normalized ps-meters

#	Parameters for the "VFF" Holonomic method
# ----------------------------------------------------
[VFF_CONFIG]
# Used to decrease speed gradually when the target is going to be reached
TARGET_SLOW_APPROACHING_DISTANCE = 0.8	
# Use it to control the relative weight of the target respect to the obstacles
TARGET_ATTRACTIVE_FORCE = 7.5


