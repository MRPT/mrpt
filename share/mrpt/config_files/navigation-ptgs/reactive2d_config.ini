# ------------------------------------------------------------------------
# Example configuration file for MRPT Reactive Navigation engine.
# See C++ documentation: http://reference.mrpt.org/devel/classmrpt_1_1nav_1_1_c_reactive_navigation_system.html
# See ROS node documentation: http://wiki.ros.org/mrpt_reactivenav2d
# ------------------------------------------------------------------------

# This *optional* section only contains a name for the robot.
[ROBOT_CONFIG]
# Robot name will be used as a sufix for precomputed PTG cache files.
Name = MyRobot


[GLOBAL_CONFIG]
# 0 or `hmVIRTUAL_FORCE_FIELDS`: Virtual Force Field
# 1 or `hmSEARCH_FOR_BEST_GAP`: Nearness Diagram (ND)
#      `hmFULL_EVAL`: Evaluation of all possible directions
HOLONOMIC_METHOD = hmSEARCH_FOR_BEST_GAP

ALARM_SEEMS_NOT_APPROACHING_TARGET_TIMEOUT=100    # (seconds)

# Absolute maximum speed limits to honor: if a PTG specifies greater values, 
# trajectories are slowed down.
# Applicability in each kinematic model: 
# * CRobot2NavInterface_DiffDriven: robotMax_V_mps and robotMax_W_degps apply.
# * CRobot2NavInterface_Holo: robotMax_W_degps is *ignored*, robotMax_V_mps is used.
robotMax_V_mps   = 0.7   # Speed limits
robotMax_W_degps = 40

#    Parameters for the "FullEval" Holonomic method
# ----------------------------------------------------
[FULL_EVAL_CONFIG]
#factorWeights=0.5 3.0 0.1 0.01 2.0
factorWeights = 0.8  1.0  1.0  0.1  2.0
# 1: Clearness in direction
# 2: Closest approach to target along straight line (Euclidean)
# 3: Distance to end collision-free point to target (Euclidean)
# 4: Hysteresis
# 5: Clearness to nearest obstacle along path

TARGET_SLOW_APPROACHING_DISTANCE = 0.30 	// for stopping gradually
TOO_CLOSE_OBSTACLE = 0.02 					// in ps-meters [0,1]
HYSTERESIS_SECTOR_COUNT = 5					// range of 'sectors' (directions) for hysteresis over successive timesteps


#	Parameters for the "Nearness diagram" Holonomic method
# ----------------------------------------------------
[ND_CONFIG]
factorWeights=1.0 0.5 2.0 0.5
# 1: Free space
# 2: Dist. in sectors
# 3: Closer to target (euclidean)
# 4: Hysteresis
WIDE_GAP_SIZE_PERCENT            = 0.25
MAX_SECTOR_DIST_FOR_D2_PERCENT   = 0.25
RISK_EVALUATION_SECTORS_PERCENT  = 0.25
RISK_EVALUATION_DISTANCE         = 0.5  # In normalized ps-meters [0,1]
TARGET_SLOW_APPROACHING_DISTANCE = 0.8	# For stop gradually
TOO_CLOSE_OBSTACLE               = 0.03 # In normalized ps-meters

#	Parameters for the "VFF" Holonomic method
# ----------------------------------------------------
[VFF_CONFIG]
# Used to decrease speed gradually when the target is going to be reached
TARGET_SLOW_APPROACHING_DISTANCE = 0.8	
# Use it to control the relative weight of the target respect to the obstacles
TARGET_ATTRACTIVE_FORCE = 7.5

# ----------------------------------------------------
#	Parameters for navigation
# ----------------------------------------------------
[ReactiveParams]
weights=0.5 0.05 0.5 2.0 0.2 0.1
# 1: Free space
# 2: Dist. in sectors			
# 3: Heading toward target
# 4: Closer to target (euclidean)
# 5: Hysteresis
# 6: Security Distance

DIST_TO_TARGET_FOR_SENDING_EVENT=0.6	# Minimum. distance to target for sending the end event. Set to 0 to send it just on navigation end

MinObstaclesHeight=0.0 		# Minimum coordinate in the "z" axis for an obstacle to be taken into account.
MaxObstaclesHeight=1.40 	# Maximum coordinate in the "z" axis for an obstacle to be taken into account.

robotMax_V_mps   = 1.0		# Speed limits
robotMax_W_degps = 60

# Maximum distance to build PTGs (in meters), i.e. the visibility "range" of tentative paths
# This number of actually used to cut obstacle point clouds, each PTG has its own refDistance parameter.
MAX_REFERENCE_DISTANCE= 6.0 # Max distance to take obstacles into account
MAX_DISTANCE_TO_ALLOW_SKIP_WAYPOINT = 3.0 # Max distance to "foresee" waypoints

# Deprecated in MRPT >=1.5.0
#LUT_CELL_SIZE           = 0.05      # Look-up-table cell size, or resolution (in meters)

# The constant time of a first-order low-pass filter of outgoing speed commands, 
# i.e. can be used to impose a maximum acceleration.
SPEEDFILTER_TAU         = 0         

# In normalized distances (distance / maxReference), the start and end of a 
# ramp function that scales the velocity output from the holonomic navigator:
#  velocity scale
#      ^
#      |           _____________
#      |          /
#    1 |         /
#      |        /
#    0 +-------+---|----------------> normalized distance
#           Start
#                 End
secureDistanceStart=0.05	# [0,1] smallest collision-free norm'd dist for which the robot will not move [default: 0.05]
secureDistanceEnd  =0.20	# [0,1] minimum norm'd clearance in current direction for speed to remain same [default:0.20]

USE_DELAYS_MODEL    = false 


# PTGs: See classes derived from mrpt::nav::CParameterizedTrajectoryGenerator ( http://reference.mrpt.org/devel/classmrpt_1_1nav_1_1_c_parameterized_trajectory_generator.html)
# refer to papers for details.
#------------------------------------------------------------------------------

PTG_COUNT      = 3

# C-PTG (circular arcs), driving forward (K=+1)
PTG0_Type      = CPTG_DiffDrive_C
PTG0_resolution = 0.05    # Look-up-table cell size or resolution (in meters)
PTG0_refDistance= 10.0    # Maximum distance to build PTGs (in meters), i.e. the visibility "range" of tentative paths
PTG0_num_paths = 121
PTG0_v_max_mps = 1.0
PTG0_w_max_dps = 60
PTG0_K         = 1.0
PTG0_score_priority = 1.0

# alpha-a PTG
PTG1_Type        = CPTG_DiffDrive_alpha
PTG1_resolution = 0.05    # Look-up-table cell size or resolution (in meters)
PTG1_refDistance= 10.0    # Maximum distance to build PTGs (in meters), i.e. the visibility "range" of tentative paths
PTG1_num_paths   = 121
PTG1_v_max_mps   = 1.0
PTG1_w_max_dps   = 60
PTG1_cte_a0v_deg = 57
PTG1_cte_a0w_deg = 57
PTG1_score_priority = 1.0

# C-PTG (circular arcs), backwards (K=-1)
# lower priority since we prefer driving forward
PTG2_Type      = CPTG_DiffDrive_C
PTG2_resolution = 0.05    # Look-up-table cell size or resolution (in meters)
PTG2_refDistance= 10.0    # Maximum distance to build PTGs (in meters), i.e. the visibility "range" of tentative paths
PTG2_num_paths = 121
PTG2_v_max_mps = 1.0
PTG2_w_max_dps = 60
PTG2_K         = -1.0
PTG2_score_priority = 0.5

# Default 2D robot shape for collision checks: (ignored in ROS, superseded by node parameters)
RobotModel_shape2D_xs=-0.2 0.5 0.5 -0.2
RobotModel_shape2D_ys=0.3 0.3 -0.3 -0.3

ROBOTMODEL_DELAY=0  # (un-used param, must be present for compat. with old mrpt versions)
ROBOTMODEL_TAU=0 # (un-used param, must be present for compat. with old mrpt versions)
